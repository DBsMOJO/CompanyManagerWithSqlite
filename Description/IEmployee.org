#+title: Company Manager with SQLite - IEmployee
#+author: Daniel Binder
#+language: de
#+date: <2025-01-28 Tue>

* Zweck des Contracts

Der Contract =IEmployee= definiert die grundlegenden Eigenschaften eines Mitarbeiters im System. Er legt fest, dass jede Klasse, die diesen Contract implementiert, die Eigenschaften =CompanyId=, =FirstName=, =LastName= und =Email= bereitstellt. Damit wird sichergestellt, dass alle Mitarbeiterentitäten einheitlich und standardisiert sind.

* Verwendung

Der =IEmployee= Contract wird von der Klasse [[file:Employee.org][Employee]] implementiert, die eine konkrete Mitarbeiterentität repräsentiert. Er regelt, dass ein Mitarbeiter immer einer Firma (=Company=) zugeordnet ist und grundlegende Informationen wie Vorname, Nachname und E-Mail enthält. Dieser Contract wird verwendet, um eine konsistente Verarbeitung und Verwaltung von Mitarbeiterdaten in der Datenbank und Geschäftslogik zu gewährleisten.

* Diagramm

[[file:class-diagram/IEmployee.png]]

* Code

#+begin_src csharp :noweb yes :tangle ../CompanyManager.Logic/Contracts/IEmployee.cs
namespace CompanyManager.Logic.Contracts
{
    /// <summary>
    /// Represents an employee in the company manager.
    /// </summary>
    public interface IEmployee : IIdentifiable
    {
        /// <summary>
        /// Gets or sets the reference to the company.
        /// </summary>
        int CompanyId { get; set; }
        /// <summary>
        /// Gets or sets the first name of the employee.
        /// </summary>
        string FirstName { get; set; }
        /// <summary>
        /// Gets or sets the last name of the employee.
        /// </summary>
        string LastName { get; set; }
        /// <summary>
        /// Gets or sets email of the employee.
        /// </summary>
        string Email { get; set; }
    }
}
#+end_src
